/**
 * Automatically generated by the EPF PipelineConverter tool
 * Warning: This file serves as a starting point only, and ensure you check for any missing or incorrect values
 */
library "epf"
boolean isProductionDeployment = env.BRANCH_NAME ==~ /^(release|hotfix).*/

env.CNP_IGNORE_CONFTEST_ANALYSIS_FAILURE=true
env.CNP_AWS_IDP_PROVIDER='Okta'
env.CNP_AWS_TF_CRED_DEV = 'DAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_QA = 'TAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_PROD = 'PAWS-HS-UPSILONFRIES'
env.CNP_DEFAULT_TERRAFORM_IMAGE = 'cnp/cnp-docker-terraform:1.0.0-dev-ov2'
def APPROVERS = 'accounts\\C8P8ZF,accounts\\P57026, accounts\\C7B8GS,accounts\\C7Q7RW,accounts\\C7R5TN,accounts\\C8C7GQ,accounts\\EI5194,accounts\\EJ6842,accounts\\C8Q9M3,accounts\\C8G2NZ'
env.CX_CREDENTIAL = "bef_checkmarx"


List phasesToRun = [
        [    
            moduleType: 'quality',
            moduleName: 'cnp-quality-profile-checkmarx',
            subCommand: 'scan',
            branchPattern: '.*',
            sdlcEnvironment: 'dev',
            isProductionDeployment: false,
            args: [
                    cxPreset: 36,//checkmarx default
                    projectName: "aws-terraform-hs-bef-intentapi", // unique name for each project. The project will be created automatically if it does not exist
                    cxProductionBranch: "master",
                    teamName: "BEF", //this is unique for each team, and new for CNP. Overwrites cxGroupId
                    cxIncremental: true, // does an incremental scan of only new code
                    // locationPath: 'src',
                    cxExcludeFolders: '.git,.gitignore'    // exclude folders that contain autogenerated content or test data that is not part of your production code base
            ]
        ],
    /* --------------- DEV DEPLOYMENT --------------- */
    /*********** (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to DEV ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'dev',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

   
    /* --------------- QA/TEST DEPLOYMENT --------------- */
    /*********** (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to QA ?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'qa',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/qa',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

//Prod (Blue) configuration
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to continue deployment to Prod?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    [
        releaseType: 'preRelease',
        branchPattern: '^(release|hotfix).*',
        phases: [
            [
                moduleType            : 'terraform',
                moduleName            : 'cnp-deploy-terraform-aws',
                subCommand            : 'apply',
                branchPattern         : '^(release|hotfix).*',
                sdlcEnvironment       : 'prod',
                isProductionDeployment: false,
                args                  : [
                    configDir             : 'envs/prod',
                    env                   : 'prod',
                    awsAccountId          : '928817075302',
                    awsUsername           : 'PAWS-HS-UPSILONFRIES',
                    awsRoleName           : 'DEPLOYER',
                    tfVersion             : '1.4.6',
                    tfDir                 : ''
                ],
                container             : [
                    memory: 2000,
                    cpu   : 1000,
                ]
            ]
        ]
    ],
            //Prod XLR configuration
    [
        branchPattern: '^(release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to continue for Prod XLR Release? Note: This will change Production Infrastructure',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    [
        releaseType: 'release',
        branchPattern: '^(develop|release|hotfix).*',
        phases: [
            [
                moduleType            : 'terraform',
                moduleName            : 'cnp-deploy-terraform-aws',
                subCommand            : 'apply',
                branchPattern         : '^(release|hotfix).*',
                sdlcEnvironment       : 'prod',
                isProductionDeployment: true,
                args                  : [
                    configDir             : 'envs/prod',
                    env                   : 'prod',
                    awsAccountId          : '928817075302',
                    awsUsername           : 'PAWS-HS-UPSILONFRIES',
                    awsRoleName           : 'DEPLOYER',
                    tfVersion             : '1.4.6',
                    tfDir                 : ''
                ],
                container             : [
                    memory: 2000,
                    cpu   : 1000,
                ]
            ]
        ]
    ],

]

cignaBuildFlow {
    githubConnectionName = 'github'
    githubCredentialsId = 'GIT_TOKEN'
    commitStatusName = ''
    cloudName = 'pbbef-openshift-devops1'
    phases = phasesToRun
}